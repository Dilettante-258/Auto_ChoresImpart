name: First Execute
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]              # 修改时启动workflow
  workflow_dispatch:                  # 手动触发workflow
jobs:
  job_1:
    name: Arrange
    runs-on: ubuntu-latest
    steps:
      - uses: szenius/set-timezone@v1.0 # 设置执行环境的时区
        with:
          timezoneLinux: "Asia/Shanghai"# 中国上海

      - uses: actions/checkout@v3       # 导入文件
      - name: Set up Python 3.10        # 建立Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'        # Python版本
          architecture: 'x64'
      - name: Install dependencies      # 安装依赖项
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8          # 引入语法检查模块
        run: |                          # 检查语法，如果存在Python语法错误或未定义的名称，停止生成。检查长度功能已禁用。
          pip install flake8
          flake8 .
        continue-on-error: true         # 开启以防止工作流失败
      - name: Retrieve secret
        env:
          PRINAME: ${{ secrets.PRINAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          MAIL: ${{ secrets.MAIL }}
          ROSTER: ${{ secrets.ROSTER }}
          MAILS: ${{ secrets.MAILS }}
          TOKEN: ${{ secrets.TOKEN }}
      - name: Cache                     # 配置缓存
        uses: actions/cache@v3.2.2
        with:
          path: /home/runner/work/-Auto_ChoresImpact/-Auto_ChoresImpact      # 要缓存和恢复的文件、目录和通配符模式的列表
          key: ${{ secrets.TOKEN }}                                         # 控制缓存密码

      - uses: actions/upload-artifact@v2
        with:
          name: ProgramLog
          path: ProgramLog.txt

      - name: Run the execution         # 运行程序
        run:
          python Arrange.py

  job_2:
    name: Judge
    runs-on: ubuntu-latest
    needs: job_1
    steps:
      - uses: szenius/set-timezone@v1.0 # 设置执行环境的时区
        with:
          timezoneLinux: "Asia/Shanghai"# 中国上海

      - uses: actions/checkout@v3       # 导入文件
      - name: Set up Python 3.10        # 建立Python环境
        uses: actions/setup-python@v4
        with:
            python-version: '3.10'        # Python版本
            architecture: 'x64'
      - name: Install dependencies      # 安装依赖项
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - name: Lint with flake8          # 引入语法检查模块
        run: |                          # 检查语法，如果存在Python语法错误或未定义的名称，停止生成。检查长度功能已禁用。
          pip install flake8
          flake8 .
        continue-on-error: true         # 开启以防止工作流失败
      - name: Retrieve secret
        env:
         PRINAME: ${{ secrets.PRINAME }}
         PASSWORD: ${{ secrets.PASSWORD }}
         MAIL: ${{ secrets.MAIL }}
         ROSTER: ${{ secrets.ROSTER }}
         MAILS: ${{ secrets.MAILS }}
         TOKEN: ${{ secrets.TOKEN }}
     - name: Cache                     # 配置缓存
       uses: actions/cache@v3.2.2
       with:
         path: /home/runner/work/-Auto_ChoresImpact/-Auto_ChoresImpact      # 要缓存和恢复的文件、目录和通配符模式的列表
         key: ${{ secrets.TOKEN }}                                         # 控制缓存密码

     - uses: actions/download-artifact@v2
       with:
         name: file

    - name: Run the execution         # 运行程序
      run:
        python Judge.py
